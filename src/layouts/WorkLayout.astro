---
import ProjectHero from '../components/ProjectHero.astro';
import Layout from '../layouts/Layout.astro';

interface Props {
	title: string;
}

const { title } = Astro.props;
const { frontmatter, content } = Astro.props;
const allPosts = await Astro.glob('../pages/work/*.mdx');
---

<Layout>
<main>
	{ 
	frontmatter.heroImage.url &&
		<ProjectHero image={frontmatter.heroImage.url} title={frontmatter.title} />
	}

	<div class="" style="padding-bottom: 500px;">
		<slot />
	</div>

	<div class="work-nav">

        { allPosts.map((post) =>

			<a class="block-link project-link" href={post.url}>
				<div class="work-item">
					<img src={post.frontmatter.thumbnail.url} alt="" />
				</div>
			</a>
	
		)}
	</div>
</main>
</Layout>

<style>
	body.scroll-up .work-nav
	{
		transform: translate3d(-50%, 0 , 0);
	}
	body.scroll-down .work-nav
	{
		transform: translate3d(-50%, 150%, 0);
	}
	.work-nav
	{
		transition: transform 0.5s ease-in-out;
		background-color: rgba(55,55,55,0.5);
		backdrop-filter: blur(10px);
		border-radius: 12px;
		position: fixed;
		bottom:20px;
		left:50%;
		transform: translate3d(-50%, 0%, 0);
		z-index: 9999;
		display: flex;
		gap:12px;
		padding:12px;
	}
	.work-nav .work-item
	{
		border-radius: 4px;
		background-color: #000;
		width:100px;
		height: 56px;
		overflow: hidden;
	}
	.work-nav .work-item img
	{
		width: 100%;
		height: 100%;
		object-fit: fill;
		opacity: 0.8;
	}
	.project-meta
	{
		padding: 4rem 5rem;
	}
	.projects-stats
	{
		border-bottom:1px solid var(--border-color);
		display: flex;
		flex-direction: row;
		gap:40px;
		padding: 4rem 5rem;
	}
	
	.projects-stats .stat
	{
		display: flex;
		flex-direction: column;
		gap:10px;
		flex:1;
	}
	
	.project-title
	{
		margin-top:0;
	}
	
	.projects-stats .stat p
	{
		margin: 0;
	}
	
	.projects-stats .stat-stat
	{
		font-size:36px;
	}
	.project-content
	{
		display:grid;
		grid-template-columns: repeat(2,1fr);
		grid-column-gap: 40px;
	}
	.project-content article
	{
		padding: 4rem 5rem;
	}
	.project-content p.lead-in
	{
		margin-top:0;
		font-size: 48px;
		line-height: 1.2em;
	}
	.project-content p
	{
		font-size: 18px;
		line-height: 2em;
	}
	</style>

<script>
	let lastScrollTop = 0;

	function handleScroll() {
	const scrollTop = window.pageYOffset || document.documentElement.scrollTop;
	
	if (scrollTop > lastScrollTop) {
		// Scrolling down
		document.body.classList.remove('scroll-up');
		document.body.classList.add('scroll-down');
	} else {
		// Scrolling up
		document.body.classList.remove('scroll-down');
		document.body.classList.add('scroll-up');
	}
	
	lastScrollTop = scrollTop <= 0 ? 0 : scrollTop; // For Mobile or negative scrolling
	}

	window.addEventListener('scroll', handleScroll);
</script>